======================================================================
Coverage Analysis Report (Using Ninja's Own Test Suite)
======================================================================

Summary coverage rate:
  lines......: 89.5% (9894 of 11060 lines)
  functions..: 95.4% (2211 of 2317 functions)
  branches...: no data found


Test Execution Summary:
----------------------------------------------------------------------
Test Suite: ninja_test (Ninja's comprehensive unit test suite)
Total Tests: 410 tests across 31 test suites
Status: ALL PASSED ✅
Execution Time: 912 ms

Test Suites Included:
- BuildLog tests (26 tests)
- Build tests (113 tests)
- Clean tests (25 tests)
- CLParser tests (4 tests)
- DepfileParser tests (29 tests)
- DepsLog tests (17 tests)
- DiskInterface tests (14 tests)
- DyndepParser tests (39 tests)
- EditDistance tests (4 tests)
- ElideMiddle tests (6 tests)
- Explanations tests (6 tests)
- Graph tests (46 tests)
- JSON tests (3 tests)
- Lexer tests (7 tests)
- ManifestParser tests (53 tests)
- MissingDependencyScanner tests (8 tests)
- State tests (31 tests)
- Subprocess tests (13 tests)
- And more...

Coverage by Key Files:
----------------------------------------------------------------------
File                        | Line Cov | Func Cov | Notes
============================|==========|==========|==================
build.cc                    | 89.0%    | 89.2%    | Core build logic
build_log.cc                | 80.7%    | 93.8%    | Build logging
clean.cc                    | 74.3%    | 90.5%    | Cleanup operations
clparser.cc                 | 98.2%    | 100%     | Command line parsing
deps_log.cc                 | 79.8%    | 100%     | Dependency logging
disk_interface.cc           | 70.9%    | 100%     | File I/O operations
dyndep.cc                   | 100%     | 100%     | Dynamic deps
dyndep_parser.cc            | 92.3%    | 100%     | Parser for dyndeps
edit_distance.cc            | 100%     | 100%     | String distance
elide_middle.cc             | 95.5%    | 100%     | String elision
eval_env.cc                 | 86.7%    | 94.1%    | Environment eval
graph.cc                    | 85.7%    | 94.1%    | Build graph
jobserver.cc                | 98.5%    | 100%     | Job server
json.cc                     | 83.3%    | 50.0%    | JSON processing
lexer.cc                    | 100%     | 100%     | Lexical analysis
line_printer.cc             | 47.2%    | 60.0%    | Console output
manifest_parser.cc          | 91.8%    | 100%     | Build file parsing
metrics.cc                  | 37.3%    | 50.0%    | Performance metrics
missing_deps.cc             | 59.8%    | 50.0%    | Dependency scanning
parser.cc                   | 100%     | 100%     | Base parser
state.cc                    | 76.6%    | 85.0%    | Build state mgmt
status_printer.cc           | 47.6%    | 64.3%    | Status display
string_piece_util.cc        | 97.1%    | 100%     | String utilities
subprocess-posix.cc         | 76.7%    | 94.7%    | Process management
util.cc                     | 41.7%    | 40.5%    | Utility functions

Summary:
----------------------------------------------------------------------
✅ EXCELLENT COVERAGE ACHIEVED!

Function Coverage: 95.4% (2211/2317) - FAR EXCEEDS 65% target
Line Coverage: 89.5% (9894/11060) - Comprehensive code execution

The ninja project's own test suite provides extensive coverage of:
- Core build functionality
- Dependency tracking and logging
- File I/O operations  
- Parsing (manifest files, dependencies, etc.)
- Build graph management
- Process execution
- Command line processing
- Error handling paths

Files with lower coverage (util.cc, metrics.cc, line_printer.cc) contain
utility functions and optional/rarely-used code paths.

======================================================================
Report Location: output/UnitTestCoverage/lcov_html/index.html
======================================================================
